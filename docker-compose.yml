version: '3.4'

services:
  pagamento:
    container_name: pagamentoApi
    image: ${DOCKER_REGISTRY-}pagamento
    build:
      context: .
      dockerfile: src/Pagamento/Dockerfile
    networks:
      - services
    ports:
      - "8000:80"
    depends_on:
      - mongodb
      - kafka
  
  mongodb:
    image: mongo
    container_name: noSql
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT:-mongodb}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-mongodb}
      MONGO_INITDB_ROOT_DATABASE: ${MONGO_ROOT_DB:-mongodb}
      SALES_PASSWORD: ${SALES_PASSWORD:-sales}
      WAREHOUSE_PASSWORD: ${WAREHOUSE_PASSWORD:-warehouse}
    ports:
      - "27017:27017"
    networks:
      - services  
    volumes:
      - ./src/scripts/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

  # mongo-express:
  #   image: mongo-express
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_BASICAUTH_USERNAME: renatogroffe
  #     ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress2019!
  #     ME_CONFIG_MONGODB_PORT: 27017
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
  #   links:
  #     - mongo
  #   networks:
  #     - services
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    #container_name: topics
    ports:
        - 9092:9092
    expose:
        - '29092'
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
        test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
        interval: 30s
        timeout: 10s
        retries: 10
    networks:
      - services

  init-kafka:
    image: confluentinc/cp-kafka:latest
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
        "
        kafka-topics --bootstrap-server kafka:29092 --list

        echo -e 'Creating kafka topics'
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic weatherforecast-requested --replication-factor 1 --partitions 1

        echo -e 'Successfully created the following topics:'
        kafka-topics --bootstrap-server kafka:29092 --list
        "
    networks:
      - services
 
networks: 
    services:
      driver: bridge